package com.experion.service;

import java.util.Date;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Scanner;
import java.text.ParseException;
import com.experion.entity.Product;

public class Service {
	
	//static Product product = null;
	
	public static Product inputProductDetails() throws ParseException {
		Scanner scanner = new Scanner(System.in);
		System.out.println("Enter Product Code");
		String productCode = scanner.nextLine();
		
		System.out.println("Enter Product Name");
		String productName = scanner.nextLine();
		
		System.out.println("Enter Product Description");
		String productDescription = scanner.nextLine();
		
		System.out.println("Enter Product Price");
		double productPrice = scanner.nextDouble();
		scanner.nextLine();
		
		System.out.println("Enter Product OpenDate");
		String openDate = scanner.nextLine();
		Date dateOpen = convertStringtoDate(openDate);
		
		System.out.println("Enter Product validityDate");
		String validityDate = scanner.nextLine();
		Date dateValidity = convertStringtoDate(validityDate);
		
		System.out.println("Enter Product ExpiryDate");
		String expiryDate = scanner.nextLine();
		Date dateExpiry = convertStringtoDate(expiryDate);
		
		System.out.println("Active(true or false)-");
		boolean active = scanner.nextBoolean();
	
		//product.setProductCode(productCode);
		//product.setproductName(productName);
		//product.setproductPrice(productPrice);
		//product.setopenDate(openDate);
		//product.setvalidityDate(validityDate);
		//product.setexpiryDate(expiryDate);
		//product.setIsactive(active);
		//product.setproductDescription(productDescription);
		
		Product product = new Product( productCode, productName, productDescription, productPrice, dateOpen, dateValidity, dateExpiry , active );
		DateFormat dateFormat = new SimpleDateFormat("dd/mm/yyyy");
		
		product.setSerialNo(product.getSerialNo()+1);
		product.setSerialNoOriginal(product.getSerialNo());
		return product;
	}
     
	
	
	public static void displayProductDetails(ArrayList<Product> productList) {
		
		DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");
		
		System.out.println("SL.No"+"	"+ "ProductCode"+"	"+"ProductName" + "		" + "ProductDescription" + "	" + "ProductPrice" + "	" + "OpenDate"
				+ "		" + "ValidityDate" + "	" + "ExpiryDate" + "	" + "Active");
	
		for(Product product: productList)
		{
		if(product!=null){
		System.out.println(product.getSerialNoOriginal()+"	 "+ product.getProductCode()+"	 "+product.getProductName() + "		" + product.getProductDescription() + "		" + product.getProductPrice() + "		" + dateFormat.format(product.getOpenDate())+ "		"
				+ dateFormat.format(product.getValidityDate()) + " 	" + dateFormat.format(product.getExpiryDate())+ "		" + product.getIsactive());
		
		}
		
		
		
		
	}
	}
	public static Date convertStringtoDate(String date) throws  ParseException
	{
		DateFormat formatter = new SimpleDateFormat("dd/MM/yyyy");
		Date convertedDate = formatter.parse(date);
		return convertedDate;
	}
	
	public static void customerPurchase(int customerInput, ArrayList<Product> productList ) {
		for (Product product : productList) {
		    if(product.getSerialNoOriginal()==customerInput) {
		    	System.out.println(product.getSerialNoOriginal() + "	" + product.getProductCode() + "		"
						+ product.getProductName() + "			" + product.getProductDescription() + "			"
						+ product.getProductPrice() + "			" + product.getOpenDate() + "			"
						+ product.getValidityDate() + "			" + product.getExpiryDate());
		    	if(product.getOpenDate().before(product.getValidityDate())){
		    		System.out.println("Product is active:");
		    		}
		    	else if(product.getExpiryDate().before(product.getValidityDate())){
		    		System.out.println("Product is Inactive:");
		    	}
		    	else
		    		System.out.println("Product is Inctive:");
		    		
		    	
		    }
		    
		}
	}

}
